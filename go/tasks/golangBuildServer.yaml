---
- name: Remove Dirs
  file:
    path: "{{ item }}"
    mode: 755
    state: absent
  with_items:
    - /etc/go
    - /opt/ssl/go
    - /usr/local/bin/go
    - /opt/go
    - /var/log/go
    - /usr/local/bin/go
    - /home/source/
#        - /opt/Go/tmp

- name: Creating Dir's
  file:
    path: "{{ item }}"
    mode: 755
    state: directory
  with_items:
    - /etc/go
    - /opt/ssl/go
    - /usr/local/bin
    - /opt/go
    - /var/log/go
    - /opt/Go/tmp
    - /home/source/

- name: Download CrokroachDB binary
  stat:
    path: /opt/Go/tmp/go{{version}}.linux-amd64.tar.gz
  register: go

- name: Check file system
  stat:
    path: /opt/go
  register: golang

- name: Build and downloading Golang Server
  get_url:
    url: https://storage.googleapis.com/golang/go{{version}}.linux-amd64.tar.gz
    dest: /opt/Go/tmp/
  when: go.stat.exists != true
# https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz
- name: Installing Golang DB Core
  unarchive:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: yes
  with_items:
    - { src: "/opt/Go/tmp/go{{version}}.linux-amd64.tar.gz", dest: "/opt/go/" }
- name: Check file system
  stat:
    path: /opt/go/pth.txt
  register: path

#- name: Applying Golang Paths
#  shell: echo "\nexport GOROOT=/opt/go/\nexport PATH=$PATH:$GOROOT/home/source \nexport PATH=$PATH:/opt/go/bin" >> /etc/profile
#  when: path.stat.exists != True

#- name: Create Addition of Env Variable
#  shell: echo "\nexport GOROOT=/opt/go/\nexport PATH=$PATH:$GOROOT/home/source \nexport PATH=$PATH:/opt/go/bin" >> /opt/go/pth.txt
#  when: path.stat.exists != True
- name: SymLinking Golang file to /bin
  file:
    src: '/opt/go/{{ item.src }}'
    dest: '/bin/{{ item.lnk }}'
    mode: 0755
    state: link
  with_items:
    - { src: 'go/bin/go', lnk: 'go'}
    - { src: 'go/bin/godoc', lnk: 'godoc'}
    - { src: 'go/bin/gofmt', lnk: 'gofmt'}

...
#export GOROOT=$HOME/go1.X
#export PATH=$PATH:$GOROOT/bin
#
#bash -c 'echo -e "\nserver.id='$1'" >> file.properties'